/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/intersection-observer/intersection-observer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/intersection-observer/intersection-observer.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (\n    options.root &&\n    options.root.nodeType != 1 &&\n    options.root.nodeType != 9\n  ) {\n    throw new Error('root must be a Document or Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var rootBounds = null;\n    if (!this._rootContainsTarget(target)) {\n      rootBounds = getEmptyRect();\n    } else if (!crossOriginUpdater || this.root) {\n      rootBounds = rootRect;\n    }\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootBounds,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root && !isDoc(this.root)) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var doc = isDoc(this.root) ? this.root : document;\n    var html = doc.documentElement;\n    var body = doc.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  return (\n    containsDeep(rootDoc, target) &&\n    (!this.root || rootDoc == target.ownerDocument)\n  );\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  // If the parent has element that is assigned through shadow root slot\n  if (parent && parent.assignedSlot) {\n    parent = parent.assignedSlot.parentNode\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  return parent;\n}\n\n/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */\nfunction isDoc(node) {\n  return node && node.nodeType === 9;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n\n\n//# sourceURL=webpack:///./node_modules/intersection-observer/intersection-observer.js?");

/***/ }),

/***/ "./node_modules/lodash.debounce/index.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash.debounce/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/lodash.debounce/index.js?");

/***/ }),

/***/ "./node_modules/scrollama/build/scrollama.js":
/*!***************************************************!*\
  !*** ./node_modules/scrollama/build/scrollama.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function (global, factory) {\n\t true ? module.exports = factory() :\n\tundefined;\n}(this, (function () { 'use strict';\n\n// DOM helper functions\n\n// public\nfunction selectAll(selector, parent) {\n  if ( parent === void 0 ) parent = document;\n\n  if (typeof selector === 'string') {\n    return Array.from(parent.querySelectorAll(selector));\n  } else if (selector instanceof Element) {\n    return [selector];\n  } else if (selector instanceof NodeList) {\n    return Array.from(selector);\n  } else if (selector instanceof Array) {\n    return selector;\n  }\n  return [];\n}\n\nfunction getOffsetId(id) {\n  return (\"scrollama__debug-offset--\" + id);\n}\n\n// SETUP\nfunction setupOffset(ref) {\n  var id = ref.id;\n  var offsetVal = ref.offsetVal;\n  var stepClass = ref.stepClass;\n\n  var el = document.createElement(\"div\");\n  el.id = getOffsetId(id);\n  el.className = \"scrollama__debug-offset\";\n  el.style.position = \"fixed\";\n  el.style.left = \"0\";\n  el.style.width = \"100%\";\n  el.style.height = \"0\";\n  el.style.borderTop = \"2px dashed black\";\n  el.style.zIndex = \"9999\";\n\n  var p = document.createElement(\"p\");\n  p.innerHTML = \"\\\".\" + stepClass + \"\\\" trigger: <span>\" + offsetVal + \"</span>\";\n  p.style.fontSize = \"12px\";\n  p.style.fontFamily = \"monospace\";\n  p.style.color = \"black\";\n  p.style.margin = \"0\";\n  p.style.padding = \"6px\";\n  el.appendChild(p);\n  document.body.appendChild(el);\n}\n\nfunction setup(ref) {\n  var id = ref.id;\n  var offsetVal = ref.offsetVal;\n  var stepEl = ref.stepEl;\n\n  var stepClass = stepEl[0].className;\n  setupOffset({ id: id, offsetVal: offsetVal, stepClass: stepClass });\n}\n\n// UPDATE\nfunction update(ref) {\n  var id = ref.id;\n  var offsetMargin = ref.offsetMargin;\n  var offsetVal = ref.offsetVal;\n  var format = ref.format;\n\n  var post = format === \"pixels\" ? \"px\" : \"\";\n  var idVal = getOffsetId(id);\n  var el = document.getElementById(idVal);\n  el.style.top = offsetMargin + \"px\";\n  el.querySelector(\"span\").innerText = \"\" + offsetVal + post;\n}\n\nfunction notifyStep(ref) {\n  var id = ref.id;\n  var index = ref.index;\n  var state = ref.state;\n\n  var prefix = \"scrollama__debug-step--\" + id + \"-\" + index;\n  var elA = document.getElementById((prefix + \"_above\"));\n  var elB = document.getElementById((prefix + \"_below\"));\n  var display = state === \"enter\" ? \"block\" : \"none\";\n\n  if (elA) { elA.style.display = display; }\n  if (elB) { elB.style.display = display; }\n}\n\nfunction scrollama() {\n  var OBSERVER_NAMES = [\n    \"stepAbove\",\n    \"stepBelow\",\n    \"stepProgress\",\n    \"viewportAbove\",\n    \"viewportBelow\"\n  ];\n\n  var cb = {};\n  var io = {};\n\n  var id = null;\n  var stepEl = [];\n  var stepOffsetHeight = [];\n  var stepOffsetTop = [];\n  var stepStates = [];\n\n  var offsetVal = 0;\n  var offsetMargin = 0;\n  var viewH = 0;\n  var pageH = 0;\n  var previousYOffset = 0;\n  var progressThreshold = 0;\n\n  var isReady = false;\n  var isEnabled = false;\n  var isDebug = false;\n\n  var progressMode = false;\n  var preserveOrder = false;\n  var triggerOnce = false;\n\n  var direction = \"down\";\n  var format = \"percent\";\n\n  var exclude = [];\n\n  /* HELPERS */\n  function err(msg) {\n    console.error((\"scrollama error: \" + msg));\n  }\n\n  function reset() {\n    cb = {\n      stepEnter: function () {},\n      stepExit: function () {},\n      stepProgress: function () {}\n    };\n    io = {};\n  }\n\n  function generateInstanceID() {\n    var a = \"abcdefghijklmnopqrstuv\";\n    var l = a.length;\n    var t = Date.now();\n    var r = [0, 0, 0].map(function (d) { return a[Math.floor(Math.random() * l)]; }).join(\"\");\n    return (\"\" + r + t);\n  }\n\n  function getOffsetTop(el) {\n    var ref = el.getBoundingClientRect();\n    var top = ref.top;\n    var scrollTop = window.pageYOffset;\n    var clientTop = document.body.clientTop || 0;\n    return top + scrollTop - clientTop;\n  }\n\n  function getPageHeight() {\n    var body = document.body;\n    var html = document.documentElement;\n\n    return Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n  }\n\n  function getIndex(element) {\n    return +element.getAttribute(\"data-scrollama-index\");\n  }\n\n  function updateDirection() {\n    if (window.pageYOffset > previousYOffset) { direction = \"down\"; }\n    else if (window.pageYOffset < previousYOffset) { direction = \"up\"; }\n    previousYOffset = window.pageYOffset;\n  }\n\n  function disconnectObserver(name) {\n    if (io[name]) { io[name].forEach(function (d) { return d.disconnect(); }); }\n  }\n\n  function handleResize() {\n    viewH = window.innerHeight;\n    pageH = getPageHeight();\n\n    var mult = format === \"pixels\" ? 1 : viewH;\n    offsetMargin = offsetVal * mult;\n\n    if (isReady) {\n      stepOffsetHeight = stepEl.map(function (el) { return el.getBoundingClientRect().height; });\n      stepOffsetTop = stepEl.map(getOffsetTop);\n      if (isEnabled) { updateIO(); }\n    }\n\n    if (isDebug) { update({ id: id, offsetMargin: offsetMargin, offsetVal: offsetVal, format: format }); }\n  }\n\n  function handleEnable(enable) {\n    if (enable && !isEnabled) {\n      // enable a disabled scroller\n      if (isReady) {\n        // enable a ready scroller\n        updateIO();\n      } else {\n        // can't enable an unready scroller\n        err(\"scrollama error: enable() called before scroller was ready\");\n        isEnabled = false;\n        return; // all is not well, don't set the requested state\n      }\n    }\n    if (!enable && isEnabled) {\n      // disable an enabled scroller\n      OBSERVER_NAMES.forEach(disconnectObserver);\n    }\n    isEnabled = enable; // all is well, set requested state\n  }\n\n  function createThreshold(height) {\n    var count = Math.ceil(height / progressThreshold);\n    var t = [];\n    var ratio = 1 / count;\n    for (var i = 0; i < count; i += 1) {\n      t.push(i * ratio);\n    }\n    return t;\n  }\n\n  /* NOTIFY CALLBACKS */\n  function notifyStepProgress(element, progress) {\n    var index = getIndex(element);\n    if (progress !== undefined) { stepStates[index].progress = progress; }\n    var resp = { element: element, index: index, progress: stepStates[index].progress };\n\n    if (stepStates[index].state === \"enter\") { cb.stepProgress(resp); }\n  }\n\n  function notifyOthers(index, location) {\n    if (location === \"above\") {\n      // check if steps above/below were skipped and should be notified first\n      for (var i = 0; i < index; i += 1) {\n        var ss = stepStates[i];\n        if (ss.state !== \"enter\" && ss.direction !== \"down\") {\n          notifyStepEnter(stepEl[i], \"down\", false);\n          notifyStepExit(stepEl[i], \"down\");\n        } else if (ss.state === \"enter\") { notifyStepExit(stepEl[i], \"down\"); }\n        // else if (ss.direction === 'up') {\n        //   notifyStepEnter(stepEl[i], 'down', false);\n        //   notifyStepExit(stepEl[i], 'down');\n        // }\n      }\n    } else if (location === \"below\") {\n      for (var i$1 = stepStates.length - 1; i$1 > index; i$1 -= 1) {\n        var ss$1 = stepStates[i$1];\n        if (ss$1.state === \"enter\") {\n          notifyStepExit(stepEl[i$1], \"up\");\n        }\n        if (ss$1.direction === \"down\") {\n          notifyStepEnter(stepEl[i$1], \"up\", false);\n          notifyStepExit(stepEl[i$1], \"up\");\n        }\n      }\n    }\n  }\n\n  function notifyStepEnter(element, dir, check) {\n    if ( check === void 0 ) check = true;\n\n    var index = getIndex(element);\n    var resp = { element: element, index: index, direction: dir };\n\n    // store most recent trigger\n    stepStates[index].direction = dir;\n    stepStates[index].state = \"enter\";\n    if (preserveOrder && check && dir === \"down\") { notifyOthers(index, \"above\"); }\n\n    if (preserveOrder && check && dir === \"up\") { notifyOthers(index, \"below\"); }\n\n    if (cb.stepEnter && !exclude[index]) {\n      cb.stepEnter(resp, stepStates);\n      if (isDebug) { notifyStep({ id: id, index: index, state: \"enter\" }); }\n      if (triggerOnce) { exclude[index] = true; }\n    }\n\n    if (progressMode) { notifyStepProgress(element); }\n  }\n\n  function notifyStepExit(element, dir) {\n    var index = getIndex(element);\n    var resp = { element: element, index: index, direction: dir };\n\n    if (progressMode) {\n      if (dir === \"down\" && stepStates[index].progress < 1)\n        { notifyStepProgress(element, 1); }\n      else if (dir === \"up\" && stepStates[index].progress > 0)\n        { notifyStepProgress(element, 0); }\n    }\n\n    // store most recent trigger\n    stepStates[index].direction = dir;\n    stepStates[index].state = \"exit\";\n\n    cb.stepExit(resp, stepStates);\n    if (isDebug) { notifyStep({ id: id, index: index, state: \"exit\" }); }\n  }\n\n  /* OBSERVER - INTERSECT HANDLING */\n  // this is good for entering while scrolling down + leaving while scrolling up\n  function intersectStepAbove(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var boundingClientRect = entry.boundingClientRect;\n    var target = entry.target;\n\n    // bottom = bottom edge of element from top of viewport\n    // bottomAdjusted = bottom edge of element from trigger\n    var top = boundingClientRect.top;\n    var bottom = boundingClientRect.bottom;\n    var topAdjusted = top - offsetMargin;\n    var bottomAdjusted = bottom - offsetMargin;\n    var index = getIndex(target);\n    var ss = stepStates[index];\n\n    // entering above is only when topAdjusted is negative\n    // and bottomAdjusted is positive\n    if (\n      isIntersecting &&\n      topAdjusted <= 0 &&\n      bottomAdjusted >= 0 &&\n      direction === \"down\" &&\n      ss.state !== \"enter\"\n    )\n      { notifyStepEnter(target, direction); }\n\n    // exiting from above is when topAdjusted is positive and not intersecting\n    if (\n      !isIntersecting &&\n      topAdjusted > 0 &&\n      direction === \"up\" &&\n      ss.state === \"enter\"\n    )\n      { notifyStepExit(target, direction); }\n  }\n\n  // this is good for entering while scrolling up + leaving while scrolling down\n  function intersectStepBelow(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var boundingClientRect = entry.boundingClientRect;\n    var target = entry.target;\n\n    // bottom = bottom edge of element from top of viewport\n    // bottomAdjusted = bottom edge of element from trigger\n    var top = boundingClientRect.top;\n    var bottom = boundingClientRect.bottom;\n    var topAdjusted = top - offsetMargin;\n    var bottomAdjusted = bottom - offsetMargin;\n    var index = getIndex(target);\n    var ss = stepStates[index];\n\n    // entering below is only when bottomAdjusted is positive\n    // and topAdjusted is negative\n    if (\n      isIntersecting &&\n      topAdjusted <= 0 &&\n      bottomAdjusted >= 0 &&\n      direction === \"up\" &&\n      ss.state !== \"enter\"\n    )\n      { notifyStepEnter(target, direction); }\n\n    // exiting from above is when bottomAdjusted is negative and not intersecting\n    if (\n      !isIntersecting &&\n      bottomAdjusted < 0 &&\n      direction === \"down\" &&\n      ss.state === \"enter\"\n    )\n      { notifyStepExit(target, direction); }\n  }\n\n  /*\n\tif there is a scroll event where a step never intersects (therefore\n\tskipping an enter/exit trigger), use this fallback to detect if it is\n\tin view\n\t*/\n  function intersectViewportAbove(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var target = entry.target;\n    var index = getIndex(target);\n    var ss = stepStates[index];\n\n    if (\n      isIntersecting &&\n      direction === \"down\" &&\n      ss.direction !== \"down\" &&\n      ss.state !== \"enter\"\n    ) {\n      notifyStepEnter(target, \"down\");\n      notifyStepExit(target, \"down\");\n    }\n  }\n\n  function intersectViewportBelow(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var target = entry.target;\n    var index = getIndex(target);\n    var ss = stepStates[index];\n    if (\n      isIntersecting &&\n      direction === \"up\" &&\n      ss.direction === \"down\" &&\n      ss.state !== \"enter\"\n    ) {\n      notifyStepEnter(target, \"up\");\n      notifyStepExit(target, \"up\");\n    }\n  }\n\n  function intersectStepProgress(ref) {\n    var entry = ref[0];\n\n    updateDirection();\n    var isIntersecting = entry.isIntersecting;\n    var intersectionRatio = entry.intersectionRatio;\n    var boundingClientRect = entry.boundingClientRect;\n    var target = entry.target;\n    var bottom = boundingClientRect.bottom;\n    var bottomAdjusted = bottom - offsetMargin;\n    if (isIntersecting && bottomAdjusted >= 0) {\n      notifyStepProgress(target, +intersectionRatio);\n    }\n  }\n\n  /*  OBSERVER - CREATION */\n  // jump into viewport\n  function updateViewportAboveIO() {\n    io.viewportAbove = stepEl.map(function (el, i) {\n      var marginTop = pageH - stepOffsetTop[i];\n      var marginBottom = offsetMargin - viewH - stepOffsetHeight[i];\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var options = { rootMargin: rootMargin };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectViewportAbove, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  function updateViewportBelowIO() {\n    io.viewportBelow = stepEl.map(function (el, i) {\n      var marginTop = -offsetMargin - stepOffsetHeight[i];\n      var marginBottom = offsetMargin - viewH + stepOffsetHeight[i] + pageH;\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var options = { rootMargin: rootMargin };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectViewportBelow, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  // look above for intersection\n  function updateStepAboveIO() {\n    io.stepAbove = stepEl.map(function (el, i) {\n      var marginTop = -offsetMargin + stepOffsetHeight[i];\n      var marginBottom = offsetMargin - viewH;\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var options = { rootMargin: rootMargin };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectStepAbove, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  // look below for intersection\n  function updateStepBelowIO() {\n    io.stepBelow = stepEl.map(function (el, i) {\n      var marginTop = -offsetMargin;\n      var marginBottom = offsetMargin - viewH + stepOffsetHeight[i];\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var options = { rootMargin: rootMargin };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectStepBelow, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  // progress progress tracker\n  function updateStepProgressIO() {\n    io.stepProgress = stepEl.map(function (el, i) {\n      var marginTop = stepOffsetHeight[i] - offsetMargin;\n      var marginBottom = -viewH + offsetMargin;\n      var rootMargin = marginTop + \"px 0px \" + marginBottom + \"px 0px\";\n      var threshold = createThreshold(stepOffsetHeight[i]);\n      var options = { rootMargin: rootMargin, threshold: threshold };\n      // console.log(options);\n      var obs = new IntersectionObserver(intersectStepProgress, options);\n      obs.observe(el);\n      return obs;\n    });\n  }\n\n  function updateIO() {\n    OBSERVER_NAMES.forEach(disconnectObserver);\n\n    updateViewportAboveIO();\n    updateViewportBelowIO();\n    updateStepAboveIO();\n    updateStepBelowIO();\n\n    if (progressMode) { updateStepProgressIO(); }\n  }\n\n  /* SETUP FUNCTIONS */\n\n  function indexSteps() {\n    stepEl.forEach(function (el, i) { return el.setAttribute(\"data-scrollama-index\", i); });\n  }\n\n  function setupStates() {\n    stepStates = stepEl.map(function () { return ({\n      direction: null,\n      state: null,\n      progress: 0\n    }); });\n  }\n\n  function addDebug() {\n    if (isDebug) { setup({ id: id, stepEl: stepEl, offsetVal: offsetVal }); }\n  }\n\n  function isYScrollable(element) {\n    var style = window.getComputedStyle(element);\n    return (\n      (style.overflowY === \"scroll\" || style.overflowY === \"auto\") &&\n      element.scrollHeight > element.clientHeight\n    );\n  }\n\n  // recursively search the DOM for a parent container with overflowY: scroll and fixed height\n  // ends at document\n  function anyScrollableParent(element) {\n    if (element && element.nodeType === 1) {\n      // check dom elements only, stop at document\n      // if a scrollable element is found return the element\n      // if not continue to next parent\n      return isYScrollable(element)\n        ? element\n        : anyScrollableParent(element.parentNode);\n    }\n    return false; // didn't find a scrollable parent\n  }\n\n  var S = {};\n\n  S.setup = function (ref) {\n    var step = ref.step;\n    var parent = ref.parent;\n    var offset = ref.offset; if ( offset === void 0 ) offset = 0.5;\n    var progress = ref.progress; if ( progress === void 0 ) progress = false;\n    var threshold = ref.threshold; if ( threshold === void 0 ) threshold = 4;\n    var debug = ref.debug; if ( debug === void 0 ) debug = false;\n    var order = ref.order; if ( order === void 0 ) order = true;\n    var once = ref.once; if ( once === void 0 ) once = false;\n\n    reset();\n    // create id unique to this scrollama instance\n    id = generateInstanceID();\n\n    stepEl = selectAll(step, parent);\n\n    if (!stepEl.length) {\n      err(\"no step elements\");\n      return S;\n    }\n\n    // ensure that no step has a scrollable parent element in the dom tree\n    // check current step for scrollable parent\n    // assume no scrollable parents to start\n    var scrollableParent = stepEl.reduce(\n      function (foundScrollable, s) { return foundScrollable || anyScrollableParent(s.parentNode); },\n      false\n    );\n    if (scrollableParent) {\n      console.error(\n        \"scrollama error: step elements cannot be children of a scrollable element. Remove any css on the parent element with overflow: scroll; or overflow: auto; on elements with fixed height.\",\n        scrollableParent\n      );\n    }\n\n    // options\n    isDebug = debug;\n    progressMode = progress;\n    preserveOrder = order;\n    triggerOnce = once;\n\n    S.offsetTrigger(offset);\n    progressThreshold = Math.max(1, +threshold);\n\n    isReady = true;\n\n    // customize\n    addDebug();\n    indexSteps();\n    setupStates();\n    handleResize();\n    S.enable();\n    return S;\n  };\n\n  S.resize = function () {\n    handleResize();\n    return S;\n  };\n\n  S.enable = function () {\n    handleEnable(true);\n    return S;\n  };\n\n  S.disable = function () {\n    handleEnable(false);\n    return S;\n  };\n\n  S.destroy = function () {\n    handleEnable(false);\n    reset();\n  };\n\n  S.offsetTrigger = function (x) {\n    if (x === null) { return offsetVal; }\n\n    if (typeof x === \"number\") {\n      format = \"percent\";\n      if (x > 1) { err(\"offset value is greater than 1. Fallback to 1.\"); }\n      if (x < 0) { err(\"offset value is lower than 0. Fallback to 0.\"); }\n      offsetVal = Math.min(Math.max(0, x), 1);\n    } else if (typeof x === \"string\" && x.indexOf(\"px\") > 0) {\n      var v = +x.replace(\"px\", \"\");\n      if (!isNaN(v)) {\n        format = \"pixels\";\n        offsetVal = v;\n      } else {\n        err(\"offset value must be in 'px' format. Fallback to 0.5.\");\n        offsetVal = 0.5;\n      }\n    } else {\n      err(\"offset value does not include 'px'. Fallback to 0.5.\");\n      offsetVal = 0.5;\n    }\n    return S;\n  };\n\n  S.onStepEnter = function (f) {\n    if (typeof f === \"function\") { cb.stepEnter = f; }\n    else { err(\"onStepEnter requires a function\"); }\n    return S;\n  };\n\n  S.onStepExit = function (f) {\n    if (typeof f === \"function\") { cb.stepExit = f; }\n    else { err(\"onStepExit requires a function\"); }\n    return S;\n  };\n\n  S.onStepProgress = function (f) {\n    if (typeof f === \"function\") { cb.stepProgress = f; }\n    else { err(\"onStepProgress requires a function\"); }\n    return S;\n  };\n\n  return S;\n}\n\nreturn scrollama;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/scrollama/build/scrollama.js?");

/***/ }),

/***/ "./node_modules/stickyfilljs/dist/stickyfill.js":
/*!******************************************************!*\
  !*** ./node_modules/stickyfilljs/dist/stickyfill.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\r\n  * Stickyfill – `position: sticky` polyfill\r\n  * v. 2.1.0 | https://github.com/wilddeer/stickyfill\r\n  * MIT License\r\n  */\r\n\r\n;(function(window, document) {\r\n    'use strict';\r\n    \r\n    /*\r\n     * 1. Check if the browser supports `position: sticky` natively or is too old to run the polyfill.\r\n     *    If either of these is the case set `seppuku` flag. It will be checked later to disable key features\r\n     *    of the polyfill, but the API will remain functional to avoid breaking things.\r\n     */\r\n    \r\n    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n    \r\n    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n    \r\n    var seppuku = false;\r\n    \r\n    var isWindowDefined = typeof window !== 'undefined';\r\n    \r\n    // The polyfill can’t function properly without `window` or `window.getComputedStyle`.\r\n    if (!isWindowDefined || !window.getComputedStyle) seppuku = true;\r\n    // Dont’t get in a way if the browser supports `position: sticky` natively.\r\n    else {\r\n            (function () {\r\n                var testNode = document.createElement('div');\r\n    \r\n                if (['', '-webkit-', '-moz-', '-ms-'].some(function (prefix) {\r\n                    try {\r\n                        testNode.style.position = prefix + 'sticky';\r\n                    } catch (e) {}\r\n    \r\n                    return testNode.style.position != '';\r\n                })) seppuku = true;\r\n            })();\r\n        }\r\n    \r\n    /*\r\n     * 2. “Global” vars used across the polyfill\r\n     */\r\n    var isInitialized = false;\r\n    \r\n    // Check if Shadow Root constructor exists to make further checks simpler\r\n    var shadowRootExists = typeof ShadowRoot !== 'undefined';\r\n    \r\n    // Last saved scroll position\r\n    var scroll = {\r\n        top: null,\r\n        left: null\r\n    };\r\n    \r\n    // Array of created Sticky instances\r\n    var stickies = [];\r\n    \r\n    /*\r\n     * 3. Utility functions\r\n     */\r\n    function extend(targetObj, sourceObject) {\r\n        for (var key in sourceObject) {\r\n            if (sourceObject.hasOwnProperty(key)) {\r\n                targetObj[key] = sourceObject[key];\r\n            }\r\n        }\r\n    }\r\n    \r\n    function parseNumeric(val) {\r\n        return parseFloat(val) || 0;\r\n    }\r\n    \r\n    function getDocOffsetTop(node) {\r\n        var docOffsetTop = 0;\r\n    \r\n        while (node) {\r\n            docOffsetTop += node.offsetTop;\r\n            node = node.offsetParent;\r\n        }\r\n    \r\n        return docOffsetTop;\r\n    }\r\n    \r\n    /*\r\n     * 4. Sticky class\r\n     */\r\n    \r\n    var Sticky = function () {\r\n        function Sticky(node) {\r\n            _classCallCheck(this, Sticky);\r\n    \r\n            if (!(node instanceof HTMLElement)) throw new Error('First argument must be HTMLElement');\r\n            if (stickies.some(function (sticky) {\r\n                return sticky._node === node;\r\n            })) throw new Error('Stickyfill is already applied to this node');\r\n    \r\n            this._node = node;\r\n            this._stickyMode = null;\r\n            this._active = false;\r\n    \r\n            stickies.push(this);\r\n    \r\n            this.refresh();\r\n        }\r\n    \r\n        _createClass(Sticky, [{\r\n            key: 'refresh',\r\n            value: function refresh() {\r\n                if (seppuku || this._removed) return;\r\n                if (this._active) this._deactivate();\r\n    \r\n                var node = this._node;\r\n    \r\n                /*\r\n                 * 1. Save node computed props\r\n                 */\r\n                var nodeComputedStyle = getComputedStyle(node);\r\n                var nodeComputedProps = {\r\n                    position: nodeComputedStyle.position,\r\n                    top: nodeComputedStyle.top,\r\n                    display: nodeComputedStyle.display,\r\n                    marginTop: nodeComputedStyle.marginTop,\r\n                    marginBottom: nodeComputedStyle.marginBottom,\r\n                    marginLeft: nodeComputedStyle.marginLeft,\r\n                    marginRight: nodeComputedStyle.marginRight,\r\n                    cssFloat: nodeComputedStyle.cssFloat\r\n                };\r\n    \r\n                /*\r\n                 * 2. Check if the node can be activated\r\n                 */\r\n                if (isNaN(parseFloat(nodeComputedProps.top)) || nodeComputedProps.display == 'table-cell' || nodeComputedProps.display == 'none') return;\r\n    \r\n                this._active = true;\r\n    \r\n                /*\r\n                 * 3. Check if the current node position is `sticky`. If it is, it means that the browser supports sticky positioning,\r\n                 *    but the polyfill was force-enabled. We set the node’s position to `static` before continuing, so that the node\r\n                 *    is in it’s initial position when we gather its params.\r\n                 */\r\n                var originalPosition = node.style.position;\r\n                if (nodeComputedStyle.position == 'sticky' || nodeComputedStyle.position == '-webkit-sticky') node.style.position = 'static';\r\n    \r\n                /*\r\n                 * 4. Get necessary node parameters\r\n                 */\r\n                var referenceNode = node.parentNode;\r\n                var parentNode = shadowRootExists && referenceNode instanceof ShadowRoot ? referenceNode.host : referenceNode;\r\n                var nodeWinOffset = node.getBoundingClientRect();\r\n                var parentWinOffset = parentNode.getBoundingClientRect();\r\n                var parentComputedStyle = getComputedStyle(parentNode);\r\n    \r\n                this._parent = {\r\n                    node: parentNode,\r\n                    styles: {\r\n                        position: parentNode.style.position\r\n                    },\r\n                    offsetHeight: parentNode.offsetHeight\r\n                };\r\n                this._offsetToWindow = {\r\n                    left: nodeWinOffset.left,\r\n                    right: document.documentElement.clientWidth - nodeWinOffset.right\r\n                };\r\n                this._offsetToParent = {\r\n                    top: nodeWinOffset.top - parentWinOffset.top - parseNumeric(parentComputedStyle.borderTopWidth),\r\n                    left: nodeWinOffset.left - parentWinOffset.left - parseNumeric(parentComputedStyle.borderLeftWidth),\r\n                    right: -nodeWinOffset.right + parentWinOffset.right - parseNumeric(parentComputedStyle.borderRightWidth)\r\n                };\r\n                this._styles = {\r\n                    position: originalPosition,\r\n                    top: node.style.top,\r\n                    bottom: node.style.bottom,\r\n                    left: node.style.left,\r\n                    right: node.style.right,\r\n                    width: node.style.width,\r\n                    marginTop: node.style.marginTop,\r\n                    marginLeft: node.style.marginLeft,\r\n                    marginRight: node.style.marginRight\r\n                };\r\n    \r\n                var nodeTopValue = parseNumeric(nodeComputedProps.top);\r\n                this._limits = {\r\n                    start: nodeWinOffset.top + window.pageYOffset - nodeTopValue,\r\n                    end: parentWinOffset.top + window.pageYOffset + parentNode.offsetHeight - parseNumeric(parentComputedStyle.borderBottomWidth) - node.offsetHeight - nodeTopValue - parseNumeric(nodeComputedProps.marginBottom)\r\n                };\r\n    \r\n                /*\r\n                 * 5. Ensure that the node will be positioned relatively to the parent node\r\n                 */\r\n                var parentPosition = parentComputedStyle.position;\r\n    \r\n                if (parentPosition != 'absolute' && parentPosition != 'relative') {\r\n                    parentNode.style.position = 'relative';\r\n                }\r\n    \r\n                /*\r\n                 * 6. Recalc node position.\r\n                 *    It’s important to do this before clone injection to avoid scrolling bug in Chrome.\r\n                 */\r\n                this._recalcPosition();\r\n    \r\n                /*\r\n                 * 7. Create a clone\r\n                 */\r\n                var clone = this._clone = {};\r\n                clone.node = document.createElement('div');\r\n    \r\n                // Apply styles to the clone\r\n                extend(clone.node.style, {\r\n                    width: nodeWinOffset.right - nodeWinOffset.left + 'px',\r\n                    height: nodeWinOffset.bottom - nodeWinOffset.top + 'px',\r\n                    marginTop: nodeComputedProps.marginTop,\r\n                    marginBottom: nodeComputedProps.marginBottom,\r\n                    marginLeft: nodeComputedProps.marginLeft,\r\n                    marginRight: nodeComputedProps.marginRight,\r\n                    cssFloat: nodeComputedProps.cssFloat,\r\n                    padding: 0,\r\n                    border: 0,\r\n                    borderSpacing: 0,\r\n                    fontSize: '1em',\r\n                    position: 'static'\r\n                });\r\n    \r\n                referenceNode.insertBefore(clone.node, node);\r\n                clone.docOffsetTop = getDocOffsetTop(clone.node);\r\n            }\r\n        }, {\r\n            key: '_recalcPosition',\r\n            value: function _recalcPosition() {\r\n                if (!this._active || this._removed) return;\r\n    \r\n                var stickyMode = scroll.top <= this._limits.start ? 'start' : scroll.top >= this._limits.end ? 'end' : 'middle';\r\n    \r\n                if (this._stickyMode == stickyMode) return;\r\n    \r\n                switch (stickyMode) {\r\n                    case 'start':\r\n                        extend(this._node.style, {\r\n                            position: 'absolute',\r\n                            left: this._offsetToParent.left + 'px',\r\n                            right: this._offsetToParent.right + 'px',\r\n                            top: this._offsetToParent.top + 'px',\r\n                            bottom: 'auto',\r\n                            width: 'auto',\r\n                            marginLeft: 0,\r\n                            marginRight: 0,\r\n                            marginTop: 0\r\n                        });\r\n                        break;\r\n    \r\n                    case 'middle':\r\n                        extend(this._node.style, {\r\n                            position: 'fixed',\r\n                            left: this._offsetToWindow.left + 'px',\r\n                            right: this._offsetToWindow.right + 'px',\r\n                            top: this._styles.top,\r\n                            bottom: 'auto',\r\n                            width: 'auto',\r\n                            marginLeft: 0,\r\n                            marginRight: 0,\r\n                            marginTop: 0\r\n                        });\r\n                        break;\r\n    \r\n                    case 'end':\r\n                        extend(this._node.style, {\r\n                            position: 'absolute',\r\n                            left: this._offsetToParent.left + 'px',\r\n                            right: this._offsetToParent.right + 'px',\r\n                            top: 'auto',\r\n                            bottom: 0,\r\n                            width: 'auto',\r\n                            marginLeft: 0,\r\n                            marginRight: 0\r\n                        });\r\n                        break;\r\n                }\r\n    \r\n                this._stickyMode = stickyMode;\r\n            }\r\n        }, {\r\n            key: '_fastCheck',\r\n            value: function _fastCheck() {\r\n                if (!this._active || this._removed) return;\r\n    \r\n                if (Math.abs(getDocOffsetTop(this._clone.node) - this._clone.docOffsetTop) > 1 || Math.abs(this._parent.node.offsetHeight - this._parent.offsetHeight) > 1) this.refresh();\r\n            }\r\n        }, {\r\n            key: '_deactivate',\r\n            value: function _deactivate() {\r\n                var _this = this;\r\n    \r\n                if (!this._active || this._removed) return;\r\n    \r\n                this._clone.node.parentNode.removeChild(this._clone.node);\r\n                delete this._clone;\r\n    \r\n                extend(this._node.style, this._styles);\r\n                delete this._styles;\r\n    \r\n                // Check whether element’s parent node is used by other stickies.\r\n                // If not, restore parent node’s styles.\r\n                if (!stickies.some(function (sticky) {\r\n                    return sticky !== _this && sticky._parent && sticky._parent.node === _this._parent.node;\r\n                })) {\r\n                    extend(this._parent.node.style, this._parent.styles);\r\n                }\r\n                delete this._parent;\r\n    \r\n                this._stickyMode = null;\r\n                this._active = false;\r\n    \r\n                delete this._offsetToWindow;\r\n                delete this._offsetToParent;\r\n                delete this._limits;\r\n            }\r\n        }, {\r\n            key: 'remove',\r\n            value: function remove() {\r\n                var _this2 = this;\r\n    \r\n                this._deactivate();\r\n    \r\n                stickies.some(function (sticky, index) {\r\n                    if (sticky._node === _this2._node) {\r\n                        stickies.splice(index, 1);\r\n                        return true;\r\n                    }\r\n                });\r\n    \r\n                this._removed = true;\r\n            }\r\n        }]);\r\n    \r\n        return Sticky;\r\n    }();\r\n    \r\n    /*\r\n     * 5. Stickyfill API\r\n     */\r\n    \r\n    \r\n    var Stickyfill = {\r\n        stickies: stickies,\r\n        Sticky: Sticky,\r\n    \r\n        forceSticky: function forceSticky() {\r\n            seppuku = false;\r\n            init();\r\n    \r\n            this.refreshAll();\r\n        },\r\n        addOne: function addOne(node) {\r\n            // Check whether it’s a node\r\n            if (!(node instanceof HTMLElement)) {\r\n                // Maybe it’s a node list of some sort?\r\n                // Take first node from the list then\r\n                if (node.length && node[0]) node = node[0];else return;\r\n            }\r\n    \r\n            // Check if Stickyfill is already applied to the node\r\n            // and return existing sticky\r\n            for (var i = 0; i < stickies.length; i++) {\r\n                if (stickies[i]._node === node) return stickies[i];\r\n            }\r\n    \r\n            // Create and return new sticky\r\n            return new Sticky(node);\r\n        },\r\n        add: function add(nodeList) {\r\n            // If it’s a node make an array of one node\r\n            if (nodeList instanceof HTMLElement) nodeList = [nodeList];\r\n            // Check if the argument is an iterable of some sort\r\n            if (!nodeList.length) return;\r\n    \r\n            // Add every element as a sticky and return an array of created Sticky instances\r\n            var addedStickies = [];\r\n    \r\n            var _loop = function _loop(i) {\r\n                var node = nodeList[i];\r\n    \r\n                // If it’s not an HTMLElement – create an empty element to preserve 1-to-1\r\n                // correlation with input list\r\n                if (!(node instanceof HTMLElement)) {\r\n                    addedStickies.push(void 0);\r\n                    return 'continue';\r\n                }\r\n    \r\n                // If Stickyfill is already applied to the node\r\n                // add existing sticky\r\n                if (stickies.some(function (sticky) {\r\n                    if (sticky._node === node) {\r\n                        addedStickies.push(sticky);\r\n                        return true;\r\n                    }\r\n                })) return 'continue';\r\n    \r\n                // Create and add new sticky\r\n                addedStickies.push(new Sticky(node));\r\n            };\r\n    \r\n            for (var i = 0; i < nodeList.length; i++) {\r\n                var _ret2 = _loop(i);\r\n    \r\n                if (_ret2 === 'continue') continue;\r\n            }\r\n    \r\n            return addedStickies;\r\n        },\r\n        refreshAll: function refreshAll() {\r\n            stickies.forEach(function (sticky) {\r\n                return sticky.refresh();\r\n            });\r\n        },\r\n        removeOne: function removeOne(node) {\r\n            // Check whether it’s a node\r\n            if (!(node instanceof HTMLElement)) {\r\n                // Maybe it’s a node list of some sort?\r\n                // Take first node from the list then\r\n                if (node.length && node[0]) node = node[0];else return;\r\n            }\r\n    \r\n            // Remove the stickies bound to the nodes in the list\r\n            stickies.some(function (sticky) {\r\n                if (sticky._node === node) {\r\n                    sticky.remove();\r\n                    return true;\r\n                }\r\n            });\r\n        },\r\n        remove: function remove(nodeList) {\r\n            // If it’s a node make an array of one node\r\n            if (nodeList instanceof HTMLElement) nodeList = [nodeList];\r\n            // Check if the argument is an iterable of some sort\r\n            if (!nodeList.length) return;\r\n    \r\n            // Remove the stickies bound to the nodes in the list\r\n    \r\n            var _loop2 = function _loop2(i) {\r\n                var node = nodeList[i];\r\n    \r\n                stickies.some(function (sticky) {\r\n                    if (sticky._node === node) {\r\n                        sticky.remove();\r\n                        return true;\r\n                    }\r\n                });\r\n            };\r\n    \r\n            for (var i = 0; i < nodeList.length; i++) {\r\n                _loop2(i);\r\n            }\r\n        },\r\n        removeAll: function removeAll() {\r\n            while (stickies.length) {\r\n                stickies[0].remove();\r\n            }\r\n        }\r\n    };\r\n    \r\n    /*\r\n     * 6. Setup events (unless the polyfill was disabled)\r\n     */\r\n    function init() {\r\n        if (isInitialized) {\r\n            return;\r\n        }\r\n    \r\n        isInitialized = true;\r\n    \r\n        // Watch for scroll position changes and trigger recalc/refresh if needed\r\n        function checkScroll() {\r\n            if (window.pageXOffset != scroll.left) {\r\n                scroll.top = window.pageYOffset;\r\n                scroll.left = window.pageXOffset;\r\n    \r\n                Stickyfill.refreshAll();\r\n            } else if (window.pageYOffset != scroll.top) {\r\n                scroll.top = window.pageYOffset;\r\n                scroll.left = window.pageXOffset;\r\n    \r\n                // recalc position for all stickies\r\n                stickies.forEach(function (sticky) {\r\n                    return sticky._recalcPosition();\r\n                });\r\n            }\r\n        }\r\n    \r\n        checkScroll();\r\n        window.addEventListener('scroll', checkScroll);\r\n    \r\n        // Watch for window resizes and device orientation changes and trigger refresh\r\n        window.addEventListener('resize', Stickyfill.refreshAll);\r\n        window.addEventListener('orientationchange', Stickyfill.refreshAll);\r\n    \r\n        //Fast dirty check for layout changes every 500ms\r\n        var fastCheckTimer = void 0;\r\n    \r\n        function startFastCheckTimer() {\r\n            fastCheckTimer = setInterval(function () {\r\n                stickies.forEach(function (sticky) {\r\n                    return sticky._fastCheck();\r\n                });\r\n            }, 500);\r\n        }\r\n    \r\n        function stopFastCheckTimer() {\r\n            clearInterval(fastCheckTimer);\r\n        }\r\n    \r\n        var docHiddenKey = void 0;\r\n        var visibilityChangeEventName = void 0;\r\n    \r\n        if ('hidden' in document) {\r\n            docHiddenKey = 'hidden';\r\n            visibilityChangeEventName = 'visibilitychange';\r\n        } else if ('webkitHidden' in document) {\r\n            docHiddenKey = 'webkitHidden';\r\n            visibilityChangeEventName = 'webkitvisibilitychange';\r\n        }\r\n    \r\n        if (visibilityChangeEventName) {\r\n            if (!document[docHiddenKey]) startFastCheckTimer();\r\n    \r\n            document.addEventListener(visibilityChangeEventName, function () {\r\n                if (document[docHiddenKey]) {\r\n                    stopFastCheckTimer();\r\n                } else {\r\n                    startFastCheckTimer();\r\n                }\r\n            });\r\n        } else startFastCheckTimer();\r\n    }\r\n    \r\n    if (!seppuku) init();\r\n    \r\n    /*\r\n     * 7. Expose Stickyfill\r\n     */\r\n    if ( true && module.exports) {\r\n        module.exports = Stickyfill;\r\n    } else if (isWindowDefined) {\r\n        window.Stickyfill = Stickyfill;\r\n    }\r\n    \r\n})(window, document);\n\n//# sourceURL=webpack:///./node_modules/stickyfilljs/dist/stickyfill.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/js/birthRate.js":
/*!*****************************!*\
  !*** ./src/js/birthRate.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _load_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./load-data */ \"./src/js/load-data.js\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! intersection-observer */ \"./node_modules/intersection-observer/intersection-observer.js\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(intersection_observer__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var scrollama__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! scrollama */ \"./node_modules/scrollama/build/scrollama.js\");\n/* harmony import */ var scrollama__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(scrollama__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n// import Stickyfill from 'stickyfilljs';\n\nvar Stickyfill = __webpack_require__(/*! stickyfilljs */ \"./node_modules/stickyfilljs/dist/stickyfill.js\")\n\nconst MARGIN = {\n    top: 50,\n    right: 40,\n    bottom: 50,\n    left: 20\n}\nlet h = window.innerHeight,\n    w = window.innerWidth,\n    height = 0,\n    width = 0,\n    boundedWidth, boundedHeight, lineChartWidth, lineChartHeight,\n    isMobile = w <= 600 ? true : false,\n    dataset;\n\nconst $container = d3.select('#less-baby');\nconst $graphic = $container.select('.birth-rates-chart');\n// var $tip = $container.select(\".tooltip\");\nconst $svg = $graphic.select('svg')\nconst $gVis = $svg.select('g.vis')\n// const $gLine = $gVis.select('#sentiment')\n// const $gBar = $gVis.select('#number')\n// const $xAxis = $svg.select('.x-axis')\n// const $yAxis = $svg.select('.y-axis')\n\nconst xScale = d3.scaleTime(),\n    yScale = d3.scaleLinear();\n\n// const tipXOffset = 60;\n\nfunction drawChart() {\n\n    $gVis.selectAll('.line-group').remove()\n\n    xScale\n        .domain([new Date(\"2019-03-01\"), new Date(\"2021-02-02\")])\n\n    const callBottomAxis = isMobile ? d3.axisBottom(xScale)\n        .tickSizeOuter(0).ticks(2) : d3.axisBottom(xScale).tickSizeOuter(0).ticks(2)\n\n    // Set the gradient\n    $svg.append(\"linearGradient\")\n        .attr(\"id\", \"line-gradient\")\n        .attr(\"gradientUnits\", \"userSpaceOnUse\")\n        .attr(\"x1\", xScale.range()[0])\n        .attr(\"y1\", yScale.range()[0])\n        .attr(\"x2\", xScale.range()[1])\n        .attr(\"y2\", yScale.range()[1])\n        .selectAll(\"stop\")\n        .data([{\n                offset: \"0%\",\n                color: \"#0E4FB3\"\n            },\n            {\n                offset: \"100%\",\n                color: \"#EDB95A\"\n            }\n        ])\n        .enter().append(\"stop\")\n        .attr(\"offset\", function (d) {\n            return d.offset;\n        })\n        .attr(\"stop-color\", function (d) {\n            return d.color;\n        });\n\n    const states = [...new Set(dataset.map(d => d.State))]\n    const groupedData = d3.group(dataset, d => d.State)\n\n    const lineGroup = $gVis.selectAll('.line-group')\n        .data(groupedData)\n        .enter()\n        .append('g')\n        .attr('class', 'line-group')\n        .attr('transform', (d, i) => {\n            const yPosition = i <= 2 ? 0 : 1;\n            if (i <= 2) {\n                return `translate(${i*boundedWidth/3 + i*15}, ${yPosition*boundedHeight/2})`\n            } else {\n                return `translate(${(i-3)*boundedWidth/3 + (i-3)*15}, ${yPosition*boundedHeight/2 + 10})`\n            }\n\n        })\n\n\n    const stateLabel = lineGroup.append('text')\n        .attr('class', 'label')\n        .append('tspan')\n        .text(d => d[0].charAt(0).toUpperCase() + d[0].slice(1))\n\n    const xAxis = lineGroup.append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', `translate(0, ${lineChartHeight})`)\n        .call(callBottomAxis)\n\n    const yAxis = lineGroup.append('g')\n        .attr('id', d => `${d[0]}-y-axis`)\n        .attr('class', 'y-axis')\n        .attr('transform', `translate(${-10}, 0)`)\n\n    const line = lineGroup\n        .append('path')\n        .datum(d => [d[1]][0])\n        .attr('stroke-width', 3)\n        .attr('d', d => {\n            yScale.domain(d3.extent(d, s => s.Count));\n            const selState = d[0].State;\n            d3.select(`#${selState}-y-axis`)\n                .call(d3.axisLeft(yScale).tickFormat(d3.formatPrefix(\".1\", 1e5)).tickSize((5)).ticks(2));\n    \n            return d3.line()\n                .x(e => xScale(e.date))\n                .y(e => yScale(e.Count))\n                .curve(d3.curveMonotoneX)(d);\n        })\n        // .attr(\"stroke\", \"url(#line-gradient)\")\n        .attr('stroke', \"rgb(0,0,0)\")\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n\n\n\n\n    // // interactive\n    // const bisect = d3.bisector(function (d) {\n    //     return d.date;\n    // }).left // retrieve row index of date on parsed csv\n\n    // const mouseG = $gVis.append('g')\n    //     .attr('class', 'mouse-over-effects')\n\n    // // const mouseLine = mouseG.append('line') //the vertical line\n    // //     .attr('class', 'mouse-over-line')\n    // //     .attr('x0', 0)\n    // //     .attr('x1', 0)\n    // //     .attr('y0', yScale.range()[1])\n    // //     .attr('y1', yScale.range()[0])\n\n    // const mouseCircle = mouseG.append('circle')\n    //     .attr('class', 'mouse-over-circle')\n    //     .attr('r', 4)\n\n    // const formatTime = d3.timeFormat(\"%B %d, %Y\")\n    // const barDataScale = d3.scaleLinear()\n    //     .domain([0, 30])\n    //     .range([0, 100])\n\n    // mouseG.append('rect') // append a rect to catch mouse movements on canvas\n    //     .attr('width', boundedWidth)\n    //     .attr('height', boundedHeight)\n    //     .attr('fill', 'none')\n    //     .attr('pointer-events', 'all')\n    //     .on('mousemove', function (event) {\n    //         d3.selectAll('.bar-group').remove()\n    //         const mouse = d3.pointer(event, this),\n    //             xDate = xScale.invert(mouse[0]),\n    //             i = bisect(dataset, xDate, 1),\n    //             selectedData = dataset[i],\n    //             x = xScale(selectedData.date),\n    //             y = yScale(selectedData[selValueCol]);\n    //         // mouseLine\n    //         //     .attr('transform', `translate(${x}, 0)`);\n    //         mouseCircle\n    //             .attr('cx', x)\n    //             .attr('cy', y)\n\n    //         const tipW = $tip.node().getBoundingClientRect().width\n\n    //         $tip\n    //             .style('left', ()=>{\n    //                 if ((boundedWidth - x) < 50){\n    //                     return `${x - tipXOffset / 2 - tipW }px`\n    //                 } else{\n    //                     return `${x + tipXOffset}px`\n    //                 }\n    //             })\n    //             .style('top', `${y}px`)\n    //         $tip.select('.date')\n    //             .html(formatTime(selectedData.date))\n    //         $tip.select('#avg-sentiment')\n    //             .html(Math.round(selectedData[selValueCol] * 100) / 100)\n    //         $tip.select('#num-of-posts')\n    //             .html(selectedData.counts)\n\n    //         let barData = selectedData.most_common_bigrams\n    //             .replace(/\\s/g, \"\")\n    //             .replace(\"[\", \"\")\n    //             .replace(\"]\", \"\")\n    //             .replace(\"('\", \"\")\n    //             .replace(\"')\", \"\")\n    //             .split(\"),(\")\n\n    //         barData = barData.map(d => {\n    //             return d = d.replaceAll(\"(\", \"\")\n    //                 .replaceAll(\")\", \"\")\n    //                 .replaceAll(\"'\", \"\")\n    //                 .split(',')\n    //         }).slice(0, 5)\n\n    //         const barContainer = $tip.select('.bars')\n    //             .selectAll('.bar-group')\n    //             .data(barData)\n    //             .enter()\n    //             .append('div')\n    //             .attr('class', 'bar-group')\n    //         barContainer\n    //             .append('div')\n    //             .append('span')\n    //             .html(d => `${d[0]} ${d[1]}`)\n    //         barContainer\n    //             .append('div')\n    //             .append('span')\n    //             .attr('class', 'bar')\n    //             .style('width', d => barDataScale(d[2]) + '%')\n\n\n\n\n    //     })\n    //     .on('mouseover', function () {\n    //         // mouseLine\n    //         //     .style('opacity', 1)\n    //         mouseCircle\n    //             .style('opacity', 1)\n    //         $tip\n    //             .style('opacity', 1)\n    //     })\n    // .on('mouseout', function () {\n    //     // mouseLine\n    //     //     .style('opacity', 0)\n    //     mouseCircle\n    //         .style('opacity', 0)\n    //     $tip\n    //         .style('opacity', 0)\n    // })\n\n}\n\nfunction updateDimensions() {\n    h = window.innerHeight;\n    w = window.innerWidth;\n    isMobile = w <= 600 ? true : false;\n    height = $graphic.node().offsetHeight;\n    width = $graphic.node().offsetWidth;\n    boundedWidth = width - MARGIN.left - MARGIN.right\n    boundedHeight = height - MARGIN.top - MARGIN.bottom\n    $svg.attr('width', width)\n        .attr('height', height)\n    $gVis.attr('transform', `translate(${MARGIN.left}, ${MARGIN.top})`)\n    lineChartWidth = isMobile ? boundedWidth / 3 - 15 : boundedWidth / 3 - 20;\n    lineChartHeight = isMobile ? boundedHeight / 2 - 50 : boundedHeight / 2 - 80;\n    xScale\n        .range([0, lineChartWidth])\n    yScale\n        .range([lineChartHeight, 0])\n\n}\n\nfunction resize() {\n    updateDimensions();\n    drawChart();\n}\n\n// const scroller = scrollama();\n// let currentStep = '';\n// const STEP = {\n//     '': () => {\n\n//     }\n// }\n\n// function handleStepEnter({\n//     index,\n//     element,\n//     direction\n// }) {\n//     currentStep = d3.select(element).attr('data-step')\n//     STEP[currentStep]();\n// }\n\n\n// function setupScroller() {\n//     Stickyfill.add($graphic.node());\n//     // scroller.setup({\n//     //         step: $step.nodes(),\n//     //         offset: isMobile ? Math.floor(window.innerHeight * 0.5) + \"px\" : 0.5\n//     //     })\n//     //     .onStepEnter(handleStepEnter)\n\n// }\n\nconst birthCountsPath = 'birth_rates/[final]all_states_births.csv',\n    birthYoYPath = 'birth_rates/[final]all_states_yoybirths.csv'\n\n\nfunction init() {\n    Object(_load_data__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([birthCountsPath, birthYoYPath]).then(result => {\n\n        result[0].forEach(d => {\n            d.Count = +d.Count;\n            d.date = new Date(`${d.time}`)\n        })\n        result[1].forEach(d => {\n            d.birth_yoy = +d.birth_yoy;\n            d.date = new Date(`${d.Year}-${d.month}`)\n        })\n        dataset = result[0]\n        resize();\n        // setupScroller();\n    }).catch(console.error);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    init,\n    resize\n});\n\n//# sourceURL=webpack:///./src/js/birthRate.js?");

/***/ }),

/***/ "./src/js/disparityBarChart.js":
/*!*************************************!*\
  !*** ./src/js/disparityBarChart.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _load_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./load-data */ \"./src/js/load-data.js\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! intersection-observer */ \"./node_modules/intersection-observer/intersection-observer.js\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(intersection_observer__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var scrollama__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! scrollama */ \"./node_modules/scrollama/build/scrollama.js\");\n/* harmony import */ var scrollama__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(scrollama__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\nlet h = window.innerHeight,\n    w = window.innerWidth,\n    height = 0,\n    width = 0,\n    boundedWidth, boundedHeight, barChartWidth,\n    isMobile = w <= 600 ? true : false,\n    datasetRace, datasetIncome;\n\nconst MARGIN = {\n    top: 50,\n    right: 40,\n    bottom: 80,\n    left: 20\n}\n\nconst $container = d3.select('#less-baby');\nconst $graphic = $container.select('.disparity-bar-charts');\n// var $tip = $container.select(\".tooltip\");\nconst $svg = $graphic.select('svg')\nconst $gVis = $svg.select('.vis')\nconst $gVisRace = $gVis.select('#race')\nconst $gVisRaceBars = $gVisRace.select('.bars')\nconst $gVisRaceXAxis = $gVisRace.select('.x-axis')\nconst $gVisRaceYAxis = $gVisRace.select('.y-axis')\nconst $gVisIncome = $gVis.select('#income')\nconst $gVisIncomeBars = $gVisIncome.select('.bars')\nconst $gVisIncomeXAxis = $gVisIncome.select('.x-axis')\n\n\nconst xScale = d3.scaleBand(),\n    yScale = d3.scaleLinear();\n\nfunction drawChart() {\n    yScale\n        .domain([0, d3.max(datasetRace, d => d.value)])\n    $gVisRaceXAxis\n        .attr('transform', `translate(0, ${boundedHeight})`)\n\n    $gVisIncome\n        .attr('transform', `translate(${barChartWidth + 20}, 0)`)\n    $gVisIncomeXAxis\n        .attr('transform', `translate(0, ${boundedHeight})`)\n\n    xScale\n        .domain(['White', 'Black', 'Hispanic']);\n\n    const raceBar = $gVisRaceBars\n        .selectAll('.race-bar')\n        .data(datasetRace)\n\n    const raceBarEnter = raceBar\n        .enter()\n        .append('rect')\n        .attr('class', 'race-bar')\n\n    const raceBarMerge = raceBarEnter.merge(raceBar)\n        .attr('x', d => xScale(d.race_ethinicity))\n        .attr('y', d => yScale(d.value))\n        .attr('width', xScale.bandwidth())\n        .attr('height', d => boundedHeight - yScale(d.value))\n        .attr('fill', '#EDB95A')\n\n    $gVisRaceXAxis.call(d3.axisBottom(xScale)\n        .tickSizeOuter(0));\n\n    xScale\n        .domain(['Lower Income', 'Higher Income']);\n\n    const incomeBar = $gVisIncomeBars\n        .selectAll('.income-bar')\n        .data(datasetIncome);\n\n    const incomeBarEnter = incomeBar.enter()\n        .append('rect')\n        .attr('class', 'income-bar')\n\n    const incomeBarMerge = incomeBarEnter.merge(incomeBar)\n        .attr('x', d => xScale(d.income))\n        .attr('y', d => yScale(d.value))\n        .attr('width', xScale.bandwidth())\n        .attr('height', d => boundedHeight - yScale(d.value))\n        .attr('fill', '#1583DF')\n\n    $gVisIncomeXAxis.call(d3.axisBottom(xScale)\n        .tickSizeOuter(0));\n\n    $gVisRaceYAxis.call(d3.axisLeft(yScale)\n        .tickSizeOuter(0).ticks(5).tickFormat(d3.format(\".0%\")));\n\n}\n\nfunction updateDimensions() {\n\n    h = window.innerHeight;\n    w = window.innerWidth;\n    isMobile = w <= 600 ? true : false;\n    height = $graphic.node().offsetHeight;\n    width = $graphic.node().offsetWidth;\n    MARGIN.bottom = 80,\n        boundedWidth = width - MARGIN.left - MARGIN.right\n    boundedHeight = height - MARGIN.top - MARGIN.bottom\n    $svg.attr('width', width)\n        .attr('height', height)\n    $gVis.attr('transform', `translate(${MARGIN.left}, ${MARGIN.top})`)\n    barChartWidth = isMobile ? boundedWidth / 2 : boundedWidth / 2 - 10;\n\n    xScale\n        .range([0, barChartWidth])\n    if (isMobile) {\n        xScale\n            .paddingInner(0.3).paddingOuter(0.1)\n    } else {\n        xScale\n            .paddingInner(0.1).paddingOuter(0.2)\n    }\n\n    yScale\n        .range([boundedHeight, 0])\n}\n\nfunction resize() {\n    updateDimensions()\n    drawChart()\n}\n\nconst columnName = 'percentag_women_report_want_delay_childbearing_or_have_fewer_kids';\n\nfunction init() {\n    const raceDataPath = 'percentage_race_delay_pregnancy.csv',\n        incomeDataPath = 'percentage_income_delay_pregnancy.csv';\n\n    Object(_load_data__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([raceDataPath, incomeDataPath]).then(result => {\n\n        result[0].forEach(d => {\n            d.value = +d[columnName];\n        })\n        result[1].forEach(d => {\n            d.value = +d[columnName];\n        })\n        datasetRace = result[0]\n        datasetIncome = result[1]\n        resize();\n        // setupScroller();\n    }).catch(console.error);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    init,\n    resize\n});\n\n//# sourceURL=webpack:///./src/js/disparityBarChart.js?");

/***/ }),

/***/ "./src/js/footer.js":
/*!**************************!*\
  !*** ./src/js/footer.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst fallbackData = [\n  {\n    image: \"2018_02_stand-up\",\n    url: \"2018/02/stand-up\",\n    hed: \"The Structure of Stand-Up Comedy\"\n  },\n  {\n    image: \"2018_04_birthday-paradox\",\n    url: \"2018/04/birthday-paradox\",\n    hed: \"The Birthday Paradox Experiment\"\n  },\n  {\n    image: \"2018_11_boy-bands\",\n    url: \"2018/11/boy-bands\",\n    hed: \"Internet Boy Band Database\"\n  },\n  {\n    image: \"2018_08_pockets\",\n    url: \"2018/08/pockets\",\n    hed: \"Women’s Pockets are Inferior\"\n  }\n];\n\nlet storyData = null;\n\nfunction loadJS(src, cb) {\n  const ref = document.getElementsByTagName(\"script\")[0];\n  const script = document.createElement(\"script\");\n  script.src = src;\n  script.async = true;\n  ref.parentNode.insertBefore(script, ref);\n\n  if (cb && typeof cb === \"function\") {\n    script.onload = cb;\n  }\n\n  return script;\n}\n\nfunction loadStories(cb) {\n  const request = new XMLHttpRequest();\n  const v = Date.now();\n  const url = `https://pudding.cool/assets/data/stories.json?v=${v}`;\n  request.open(\"GET\", url, true);\n\n  request.onload = () => {\n    if (request.status >= 200 && request.status < 400) {\n      const data = JSON.parse(request.responseText);\n      cb(data);\n    } else cb(fallbackData);\n  };\n\n  request.onerror = () => cb(fallbackData);\n\n  request.send();\n}\n\nfunction createLink(d) {\n  return `\n\t<a class='footer-recirc__article' href='https://pudding.cool/${d.url}' target='_blank' rel='noopener'>\n\t\t<img class='article__img' src='https://pudding.cool/common/assets/thumbnails/640/${d.image}.jpg' alt='${d.hed}'>\n\t\t<p class='article__headline'>${d.hed}</p>\n\t</a>\n\t`;\n}\n\nfunction recircHTML() {\n  const url = window.location.href;\n  const html = storyData\n    .filter(d => !url.includes(d.url))\n    .slice(0, 4)\n    .map(createLink)\n    .join(\"\");\n\n  d3.select(\".pudding-footer .footer-recirc__articles\").html(html);\n}\n\nfunction init() {\n  loadStories(data => {\n    storyData = data;\n\n    recircHTML();\n  });\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ init });\n\n\n//# sourceURL=webpack:///./src/js/footer.js?");

/***/ }),

/***/ "./src/js/graphic.js":
/*!***************************!*\
  !*** ./src/js/graphic.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* global d3 */\nfunction resize() {}\n\nfunction init() {\n  console.log('Make something awesome!');\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ init, resize });\n\n\n//# sourceURL=webpack:///./src/js/graphic.js?");

/***/ }),

/***/ "./src/js/intro.js":
/*!*************************!*\
  !*** ./src/js/intro.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! intersection-observer */ \"./node_modules/intersection-observer/intersection-observer.js\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(intersection_observer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var scrollama__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scrollama */ \"./node_modules/scrollama/build/scrollama.js\");\n/* harmony import */ var scrollama__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(scrollama__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar Stickyfill = __webpack_require__(/*! stickyfilljs */ \"./node_modules/stickyfilljs/dist/stickyfill.js\");\n\nlet w = window.innerWidth,\n    isMobile = w <= 600 ? true : false;\n\n// original opacity\nd3.select('.opening__text:first-of-type')\n    .transition().duration(500)\n    .style('opacity', 1)\n\nd3.select('.opening__text:nth-of-type(2)')\n    .style('opacity', 0)\n\nconst $container = d3.select('.opening');\nconst $img = $container.selectAll('.opening__img');\nconst STEP = {\n    'show-first-sentence': (direction) => {\n        if (direction == 'down'){\n            d3.select('.opening__text:first-of-type')\n            .transition().duration(500)\n            .style('opacity', 0)\n        } else {\n            d3.select('.opening__text:first-of-type')\n            .transition().duration(500)\n            .style('opacity', 1)\n        }\n        \n        // d3.select('.opening__text:nth-of-type(2)')\n        //     .transition().duration(1000)\n        //     .style('opacity', 1)\n    },\n    'show-second-sentence': (direction) =>{\n\n        if (direction == 'down'){\n            d3.select('.opening__text:nth-of-type(2)')\n            .transition().duration(500)\n            .style('opacity', 1)\n        } else {\n            d3.select('.opening__text:nth-of-type(2)')\n            .transition().duration(500)\n            .style('opacity', 0)\n        }\n    }\n    // '1': () => {\n\n    // }\n}\n\n\n\n\nlet currentStep = ''\n\nfunction handleStepEnter({\n    index,\n    element,\n    direction\n}) {\n    currentStep = d3.select(element).attr('data-step');\n    STEP[currentStep](direction)\n}\n\nfunction handleStepExit({\n    index,\n    element,\n    direction\n}) {\n    currentStep = d3.select(element).attr('data-step');\n    // STEP(currentStep)\n    STEP[currentStep](direction)\n}\n\nconst scroller = scrollama__WEBPACK_IMPORTED_MODULE_1___default()();\n\nfunction setupScroller() {\n    scroller.setup({\n            step: $img.nodes(),\n            offset: isMobile ? Math.floor(window.innerHeight * 0.9) + \"px\" : 0.9\n        })\n        .onStepEnter(handleStepEnter)\n        .onStepExit(handleStepExit)\n}\n\nfunction init() {\n    setupScroller()\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    init\n});\n\n//# sourceURL=webpack:///./src/js/intro.js?");

/***/ }),

/***/ "./src/js/load-data.js":
/*!*****************************!*\
  !*** ./src/js/load-data.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return loadData; });\n/* global d3 */\n/* usage\n\timport loadData from './load-data'\n\t\n\tloadData('file.csv').then(result => {\n\t\tconsole.log(result);\n\t}).catch(console.error);\n\n\tloadData(['file1.csv', 'file2.json]).then(result => {\n\t\tconsole.log(result);\n\t}).catch(console.error);\n*/\n\nfunction loadFile(file) {\n  return new Promise((resolve, reject) => {\n    const ext = file.split('.').pop();\n    if (ext === 'csv')\n      d3.csv(`assets/data/${file}`)\n        .then(resolve)\n        .catch(reject);\n    else if (ext === 'json')\n      d3.json(`assets/data/${file}`)\n        .then(resolve)\n        .catch(reject);\n    else reject(new Error(`unsupported file type for: ${file}`));\n  });\n}\n\nfunction loadData(files) {\n  if (typeof files === 'string') return loadFile(files);\n  const loads = files.map(loadFile);\n  return Promise.all(loads);\n}\n\n\n//# sourceURL=webpack:///./src/js/load-data.js?");

/***/ }),

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.debounce */ \"./node_modules/lodash.debounce/index.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_is_mobile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/is-mobile */ \"./src/js/utils/is-mobile.js\");\n/* harmony import */ var _utils_link_fix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/link-fix */ \"./src/js/utils/link-fix.js\");\n/* harmony import */ var _utils_modal_a11y__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/modal-a11y */ \"./src/js/utils/modal-a11y.js\");\n/* harmony import */ var _graphic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./graphic */ \"./src/js/graphic.js\");\n/* harmony import */ var _footer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./footer */ \"./src/js/footer.js\");\n/* harmony import */ var _intro__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./intro */ \"./src/js/intro.js\");\n/* harmony import */ var _takeAGuessBar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./takeAGuessBar */ \"./src/js/takeAGuessBar.js\");\n/* harmony import */ var _redditChart__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./redditChart */ \"./src/js/redditChart.js\");\n/* harmony import */ var _birthRate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./birthRate */ \"./src/js/birthRate.js\");\n/* harmony import */ var _disparityBarChart__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./disparityBarChart */ \"./src/js/disparityBarChart.js\");\n/* harmony import */ var _moreStory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./moreStory */ \"./src/js/moreStory.js\");\n/* global d3 */\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst $body = d3.select('body');\nlet previousWidth = 0;\n\nfunction resize() {\n  // only do resize on width changes, not height\n  // (remove the conditional if you want to trigger on height change)\n  const width = $body.node().offsetWidth;\n  if (previousWidth !== width) {\n    previousWidth = width;\n    _graphic__WEBPACK_IMPORTED_MODULE_4__[\"default\"].resize();\n    _redditChart__WEBPACK_IMPORTED_MODULE_8__[\"default\"].resize();\n    _birthRate__WEBPACK_IMPORTED_MODULE_9__[\"default\"].resize();\n    _disparityBarChart__WEBPACK_IMPORTED_MODULE_10__[\"default\"].resize();\n  }\n}\n\nfunction setupStickyHeader() {\n  const $header = $body.select('header');\n  if ($header.classed('is-sticky')) {\n    const $menu = $body.select('#slide__menu');\n    const $toggle = $body.select('.header__toggle');\n\n    Object(_utils_modal_a11y__WEBPACK_IMPORTED_MODULE_3__[\"default\"])($toggle, $toggle, $header, $menu, 'a, button, .logo', true);\n  }\n}\n\nfunction init() {\n  // adds rel=\"noopener\" to all target=\"_blank\" links\n  Object(_utils_link_fix__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n  // add mobile class to body tag\n  $body.classed('is-mobile', _utils_is_mobile__WEBPACK_IMPORTED_MODULE_1__[\"default\"].any());\n  // setup resize event\n  window.addEventListener('resize', lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(resize, 150));\n  // setup sticky header menu\n  setupStickyHeader();\n  // kick off graphic code\n  _graphic__WEBPACK_IMPORTED_MODULE_4__[\"default\"].init();\n  // load footer stories\n  _footer__WEBPACK_IMPORTED_MODULE_5__[\"default\"].init();\n  _takeAGuessBar__WEBPACK_IMPORTED_MODULE_7__[\"default\"].init();\n  _redditChart__WEBPACK_IMPORTED_MODULE_8__[\"default\"].init();\n  _birthRate__WEBPACK_IMPORTED_MODULE_9__[\"default\"].init();\n  _disparityBarChart__WEBPACK_IMPORTED_MODULE_10__[\"default\"].init();\n  _moreStory__WEBPACK_IMPORTED_MODULE_11__[\"default\"].init();\n  _intro__WEBPACK_IMPORTED_MODULE_6__[\"default\"].init();\n}\n\ninit();\n\n\n//# sourceURL=webpack:///./src/js/main.js?");

/***/ }),

/***/ "./src/js/moreStory.js":
/*!*****************************!*\
  !*** ./src/js/moreStory.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst stories = document.querySelectorAll('.story__container');\nconst storyCount = stories.length;\nconst nextStory = document.querySelector('.button__next');\nconst previousStory = document.querySelector('.button__previous');\n\nlet count = 0;\nstories[count].classList.add('active');\n\nfunction showNext(){\n    stories[count].classList.remove('active');\n    if( count < storyCount - 1){\n        count ++;\n    } else {\n        count = 0;\n    }\n    // after count is updated\n    stories[count].classList.add('active');\n    console.log(count);\n}\n\nfunction showPrev(){\n    stories[count].classList.remove('active');\n    if (count > 0){\n        count = count - 1;\n    } else {\n        count = storyCount - 1;\n    }\n    stories[count].classList.add('active');\n    console.log(count)\n}\n\nfunction init(){\n    nextStory.addEventListener('click', showNext);\n    previousStory.addEventListener('click', showPrev);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ init });\n\n\n//# sourceURL=webpack:///./src/js/moreStory.js?");

/***/ }),

/***/ "./src/js/redditChart.js":
/*!*******************************!*\
  !*** ./src/js/redditChart.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _load_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./load-data */ \"./src/js/load-data.js\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! intersection-observer */ \"./node_modules/intersection-observer/intersection-observer.js\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(intersection_observer__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var scrollama__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! scrollama */ \"./node_modules/scrollama/build/scrollama.js\");\n/* harmony import */ var scrollama__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(scrollama__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n// import Stickyfill from 'stickyfilljs';\n\nvar Stickyfill = __webpack_require__(/*! stickyfilljs */ \"./node_modules/stickyfilljs/dist/stickyfill.js\")\n\nconst $container = d3.select('.reddit__container');\nconst $graphic = $container.select('.scroll__graphic');\nvar $tip = $container.select(\".tooltip\");\nconst $text = $container.select('.scroll__text');\n// const $step = $text.selectAll('.step')\nconst $svg = $graphic.select('svg')\nconst $gVis = $svg.select('.vis')\nconst $gLine = $gVis.select('#sentiment')\nconst $gBar = $gVis.select('#number')\nconst $xAxis = $svg.select('.x-axis')\nconst $yAxis = $svg.select('.y-axis')\nconst $explain = $graphic.select('.explain')\n\n\nlet h = window.innerHeight,\n    w = window.innerWidth,\n    height = 0,\n    width = 0,\n    explainTextHeight = $explain.node().getBoundingClientRect().height,\n    boundedWidth, boundedHeight,\n    isMobile = w <= 600 ? true : false,\n    yAxis,\n    dataset;\n\nconst MARGIN = {\n    top: 20,\n    right: 40,\n    bottom: 30,\n    left: 40\n}\n\nconst xScale = d3.scaleTime(),\n    yScale = d3.scaleLinear();\n\nconst selValueCol = '30day_avg_sentiment';\nlet tipXOffset = isMobile ? 0 : 60;\n\nfunction drawChart() {\n    $gLine.selectAll('*').remove();\n    $gVis.selectAll('text').remove();\n    $gVis.select('.mouse-over-effects').remove();\n\n    xScale\n        .domain(d3.extent(dataset, d => d.date))\n    yScale\n        .domain([0.05, d3.max(dataset, d => d[selValueCol])])\n\n    const callBottomAxis = isMobile ? d3.axisBottom(xScale)\n        .tickSizeOuter(0).ticks(5) : d3.axisBottom(xScale).tickSizeOuter(0).ticks(5)\n\n    $xAxis\n        .attr('transform', `translate(${MARGIN.left}, ${MARGIN.top + boundedHeight})`)\n        .call(callBottomAxis)\n\n    yAxis = $yAxis\n        .attr('transform', `translate(${MARGIN.left + boundedWidth}, ${MARGIN.top})`)\n        .call(d3.axisRight(yScale).tickSize((10)).ticks(5))\n    yAxis\n        .selectAll('.tick text')\n        .attr('y', -10)\n        .attr('x', 1)\n\n    const yLabel = $gVis.append('text')\n        .attr('class', 'label y-label')\n        .attr('transform', `translate(-${boundedWidth}, 0)`)\n        .selectAll('tspan')\n        .data(['Sentiment', 'Score'])\n        .enter().append('tspan')\n    yLabel\n        .text(d => d)\n        .attr('x', -35)\n        .attr('y', (d, i) => -MARGIN.top / 2 + i * 30)\n\n    // const xLabel = $gVis.append('text')\n    //     .attr('class', 'label', 'x-label')\n    //     .text('Date')\n    //     .attr('transform', `translate(${boundedWidth/2}, ${boundedHeight + 40})`)\n    //     .attr('text-anchor', 'middle')\n\n    const lineGen = d3.line()\n        .x(d => xScale(d.date))\n        .y(d => yScale(d[selValueCol]))\n        .curve(d3.curveMonotoneX)\n\n    // Set the gradient\n    $svg.append(\"linearGradient\")\n        .attr(\"id\", \"line-gradient\")\n        .attr(\"gradientUnits\", \"userSpaceOnUse\")\n        .attr(\"x1\", xScale.range()[0])\n        .attr(\"y1\", yScale.range()[0])\n        .attr(\"x2\", xScale.range()[1])\n        .attr(\"y2\", yScale.range()[1])\n        .selectAll(\"stop\")\n        .data([{\n                offset: \"0%\",\n                color: \"#0E4FB3\"\n            },\n            {\n                offset: \"100%\",\n                color: \"#EDB95A\"\n            }\n        ])\n        .enter().append(\"stop\")\n        .attr(\"offset\", function (d) {\n            return d.offset;\n        })\n        .attr(\"stop-color\", function (d) {\n            return d.color;\n        });\n\n    const sentiment = $gLine\n        .append('path')\n        .datum(dataset)\n        .attr('d', lineGen)\n        .attr(\"stroke\", \"url(#line-gradient)\")\n        .attr('fill', 'none')\n        .attr('stroke-width', 3)\n\n\n    // interactive\n    const bisect = d3.bisector(function (d) {\n        return d.date;\n    }).left // retrieve row index of date on parsed csv\n\n    const mouseG = $gVis.append('g')\n        .attr('class', 'mouse-over-effects')\n\n    // const mouseLine = mouseG.append('line') //the vertical line\n    //     .attr('class', 'mouse-over-line')\n    //     .attr('x0', 0)\n    //     .attr('x1', 0)\n    //     .attr('y0', yScale.range()[1])\n    //     .attr('y1', yScale.range()[0])\n\n    const mouseCircle = mouseG.append('circle')\n        .attr('class', 'mouse-over-circle')\n        .attr('r', 4)\n\n    const formatTime = d3.timeFormat(\"%B %d, %Y\")\n    const barDataScale = d3.scaleLinear()\n        .domain([0, 20])\n        .range([0, 100])\n\n    mouseG.append('rect') // append a rect to catch mouse movements on canvas\n        .attr('width', boundedWidth)\n        .attr('height', boundedHeight)\n        .attr('fill', 'none')\n        .attr('pointer-events', 'all')\n        .on('mousemove', function (event) {\n            d3.selectAll('.bar-group').remove()\n            const mouse = d3.pointer(event, this),\n                xDate = xScale.invert(mouse[0]),\n                i = bisect(dataset, xDate, 1),\n                selectedData = dataset[i],\n                x = xScale(selectedData.date),\n                y = yScale(selectedData[selValueCol]);\n            // mouseLine\n            //     .attr('transform', `translate(${x}, 0)`);\n            mouseCircle\n                .attr('cx', x)\n                .attr('cy', y)\n\n            const tipW = $tip.node().getBoundingClientRect().width,\n                tipH = $tip.node().getBoundingClientRect().height;\n\n            $tip\n                .style('left', () => {\n\n                    if ((boundedWidth - x) < 100) {\n                        return `${x - tipXOffset / 2 - tipW }px`\n                    } else {\n                        return `${x + tipXOffset}px`\n                    }\n                })\n                .style('top', () => {\n\n                    if ((boundedHeight - y) < 100) {\n                        return `${y - tipXOffset / 2 - tipH }px`\n                    } else {\n                        return `${y}px`\n                    }\n                })\n            $tip.select('.date')\n                .html(formatTime(selectedData.date))\n            $tip.select('#avg-sentiment')\n                .html(Math.round(selectedData[selValueCol] * 100) / 100)\n            $tip.select('#num-of-posts')\n                .html(selectedData.counts)\n\n            let barData = selectedData.most_common_bigrams\n                .replace(/\\s/g, \"\")\n                .replace(\"[\", \"\")\n                .replace(\"]\", \"\")\n                .replace(\"('\", \"\")\n                .replace(\"')\", \"\")\n                .split(\"),(\")\n\n            barData = barData.map(d => {\n                return d = d.replaceAll(\"(\", \"\")\n                    .replaceAll(\")\", \"\")\n                    .replaceAll(\"'\", \"\")\n                    .split(',')\n            }).slice(0, 5)\n\n            const barContainer = $tip.select('.bars')\n                .selectAll('.bar-group')\n                .data(barData)\n                .enter()\n                .append('div')\n                .attr('class', 'bar-group')\n            barContainer\n                .append('div')\n                .append('span')\n                .html(d => `${d[0]} ${d[1]}`)\n\n            const bar = barContainer\n                .append('div')\n                .attr('class', (d, i) => `barDiv${i}`)\n\n            bar.append('span')\n                .attr('class', 'bar')\n                .style('width', d => barDataScale(d[2]) + '%')\n\n            // const bar0Height = d3.selectAll('.barDiv0').nodes()[0].clientHeight\n\n            d3.selectAll('.barDiv0')\n                .append('span')\n                .attr('class', 'scale-0')\n                .html('0')\n            d3.selectAll('.barDiv0')\n                .append('span')\n                .attr('class', 'scale-25')\n                .html('25')\n\n\n\n        })\n        .on('mouseover', function () {\n            // mouseLine\n            //     .style('opacity', 1)\n            mouseCircle\n                .style('opacity', 1)\n            $tip\n                .style('opacity', 1)\n                .style('visibility', 'visible')\n        })\n        .on('mouseout', function () {\n            // mouseLine\n            //     .style('opacity', 0)\n            mouseCircle\n                .style('opacity', 0)\n            $tip\n                .style('opacity', 0)\n                .style('visibility', 'hidden')\n        })\n\n}\n\nfunction updateDimensions() {\n    h = window.innerHeight;\n    w = window.innerWidth;\n    isMobile = w <= 600 ? true : false;\n    tipXOffset = isMobile ? 0 : 60;\n    explainTextHeight = $explain.node().getBoundingClientRect().height;\n    height = isMobile ? h * 0.6 - explainTextHeight : h * 0.6 - explainTextHeight;\n    width = $graphic.node().offsetWidth;\n    MARGIN.bottom = 30;\n    boundedWidth = width - MARGIN.left - MARGIN.right\n    boundedHeight = height - MARGIN.top - MARGIN.bottom\n    $svg.attr('width', width)\n        .attr('height', height)\n    $gVis.attr('transform', `translate(${MARGIN.left}, ${MARGIN.top})`)\n    $explain.style('transform', `translate(${MARGIN.left}px, ${MARGIN.top}px)`)\n        .style('width', `${boundedWidth}px`)\n    xScale\n        .range([0, boundedWidth])\n    yScale\n        .range([boundedHeight, 0])\n\n}\n\nfunction resize() {\n    updateDimensions();\n    drawChart();\n}\n\nconst scroller = scrollama__WEBPACK_IMPORTED_MODULE_2___default()();\nlet currentStep = '';\nconst STEP = {\n    '': () => {\n\n    }\n}\n\nfunction handleStepEnter({\n    index,\n    element,\n    direction\n}) {\n    currentStep = d3.select(element).attr('data-step')\n    STEP[currentStep]();\n}\n\n\nfunction setupScroller() {\n    Stickyfill.add($graphic.node());\n    // scroller.setup({\n    //         step: $step.nodes(),\n    //         offset: isMobile ? Math.floor(window.innerHeight * 0.5) + \"px\" : 0.5\n    //     })\n    //     .onStepEnter(handleStepEnter)\n\n}\n\nconst sentimentDataPath = '[final-rm-stwords]daily_posts_sentiment_since_2020_jan.csv'\n// dailyPostDataPath = '[final]daily_posts_since_2020_jan.csv',\n\n\nfunction init() {\n    // loadData([dailyPostDataPath, sentimentDataPath]).then(result => {\n    //     result[1].forEach(d => {\n    //         d['30day_avg_sentiment'] = +d['30day_avg_sentiment'];\n    //         d.date = new Date(d.date)\n    //     })\n    //     dataset = result[1].filter(d => d['30day_avg_sentiment'] !== '' && d['30day_avg_sentiment'] > 0)\n    //     console.log(dataset)\n    //     resize();\n    //     setupScroller();\n    // }).catch(console.error);\n    Object(_load_data__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(sentimentDataPath).then(result => {\n        result.forEach(d => {\n            d['30day_avg_sentiment'] = +d['30day_avg_sentiment'];\n            d.date = new Date(d.date)\n        })\n        dataset = result.filter(d => d['30day_avg_sentiment'] !== '' && d['30day_avg_sentiment'] > 0)\n        // console.log(d3.extent())\n        resize();\n        setupScroller();\n    }).catch(console.error);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    init,\n    resize\n});\n\n//# sourceURL=webpack:///./src/js/redditChart.js?");

/***/ }),

/***/ "./src/js/takeAGuessBar.js":
/*!*********************************!*\
  !*** ./src/js/takeAGuessBar.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst $barNervous = d3.select('#bar-nervous');\nconst $barTalk = document.getElementById('bar-talk');\nconst $barContainers = document.querySelectorAll('.hopecovid__bars__container');\n\nfunction init() {\n    for (let i = 0; i < $barContainers.length; ++i) {\n        $barContainers[i]\n            .addEventListener('mousemove', e => {\n                const $bar = $barContainers[i].querySelector('.hopecovid__bars__container__bar')\n                const $readerText = $barContainers[i].querySelector('p.reader')\n\n                const x = e.pageX - $bar.offsetLeft, // or e.offsetX (less support, though)\n                    y = e.pageY - $bar.offsetTop; // or e.offsetY\n                let clickedValue = Math.round(x * 100 / $bar.offsetWidth)\n                if (clickedValue >= 100) {\n                    clickedValue = '100%'\n                } else if (clickedValue <= 0) {\n                    clickedValue = '0%'\n                } else {\n                    clickedValue = clickedValue + '%'\n                }\n\n                $readerText.innerHTML = i == 0 ? clickedValue + \" of the days\" : clickedValue;\n                $readerText.style.left = clickedValue;\n                $bar.querySelector('span.tick').style.left = clickedValue;\n                $bar.querySelector('span.tick').style.opacity = 1;\n            })\n        $barContainers[i].addEventListener('click', e => {\n            let barValue, barClass, answerText;\n\n            const $bar = $barContainers[i].querySelector('.hopecovid__bars__container__bar')\n            const $readerText = $barContainers[i].querySelector('p.reader')\n            const $answerText = $barContainers[i].querySelector('p.answer')\n            const x = e.pageX - $bar.offsetLeft, // or e.offsetX (less support, though)\n                y = e.pageY - $bar.offsetTop; // or e.offsetY\n            let clickedValue = Math.round(x * 100 / $bar.offsetWidth)\n\n            if (clickedValue >= 100) {\n                clickedValue = '100%'\n            } else if (clickedValue <= 0) {\n                clickedValue = '0%'\n            } else {\n                clickedValue = clickedValue + '%'\n            }\n\n            if (i == 0) {\n                barValue = 50;\n                barClass = 'progess-animation-nervous';\n                answerText = `According to HOPE COVID-19 study, \n                most of its pregnant participants were bothered\n                by nervousness and anxiety for ${barValue}% or more of the days.`\n                $readerText.innerHTML = `Your answer: ${clickedValue} of the days`\n            } else {\n                barValue = 87;\n                barClass = 'progess-animation-talk';\n                answerText = `According to HOPE COVID-19 study,\n                ${barValue}% of the pregnant participants often \n                meet or talk with family or friends`\n                $readerText.innerHTML = `Your answer: ${clickedValue}`\n            }\n            \n            $answerText.innerHTML = answerText;\n\n            $readerText.style.left = clickedValue;\n            $bar.querySelector('span.tick').style.left = clickedValue;\n            $bar.querySelector('span.tick').style.opacity = 1;\n            $bar.querySelector('span.bar').classList.add(barClass);\n\n            $barContainers[i].style.pointerEvents = \"none\";\n\n        })\n    }\n\n    // const $bar = $barContainers[i].querySelector('.hopecovid__bars__container__bar')\n    // const $text = $barContainers[i].querySelector('p')\n    // $text.innerHTML = clickedValue\n    // $barTalk.addEventListener('click', e => {\n    //     console.log($barTalk.offsetLeft)\n    //     const x = e.pageX - this.offsetLeft, // or e.offsetX (less support, though)\n    //         y = e.pageY - this.offsetTop, // or e.offsetY\n    //         clickedValue = x * this.max / this.offsetWidth\n\n    // })\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    init\n});\n\n//# sourceURL=webpack:///./src/js/takeAGuessBar.js?");

/***/ }),

/***/ "./src/js/utils/dom.js":
/*!*****************************!*\
  !*** ./src/js/utils/dom.js ***!
  \*****************************/
/*! exports provided: select, selectAll, find, removeClass, addClass, hasClass, jumpTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"select\", function() { return select; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectAll\", function() { return selectAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"find\", function() { return find; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeClass\", function() { return removeClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addClass\", function() { return addClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasClass\", function() { return hasClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"jumpTo\", function() { return jumpTo; });\n// DOM helper functions\n\n// public\nfunction select(selector) {\n  return document.querySelector(selector);\n}\n\nfunction selectAll(selector, parent = document) {\n  return [...parent.querySelectorAll(selector)];\n}\n\nfunction find(el, selector) {\n  return [...el.querySelectorAll(selector)];\n}\n\nfunction removeClass(el, className) {\n  if (el.classList) el.classList.remove(className);\n  else\n    el.className = el.className.replace(\n      new RegExp(`(^|\\\\b)${className.split(' ').join('|')}(\\\\b|$)`, 'gi'),\n      ' '\n    );\n}\n\nfunction addClass(el, className) {\n  if (el.classList) el.classList.add(className);\n  else el.className = `${el.className} ${className}`;\n}\n\nfunction hasClass(el, className) {\n  if (el.classList) return el.classList.contains(className);\n  return new RegExp(`(^| )${className}( |$)`, 'gi').test(el.className);\n}\n\nfunction jumpTo(el, offset) {\n  offset = offset || 0;\n  const top = el.getBoundingClientRect().top + offset;\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  const destY = scrollTop + top;\n  window.scrollTo(0, destY);\n}\n\n\n\n\n//# sourceURL=webpack:///./src/js/utils/dom.js?");

/***/ }),

/***/ "./src/js/utils/is-mobile.js":
/*!***********************************!*\
  !*** ./src/js/utils/is-mobile.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// device sniffing for mobile\n\nconst isMobile = {\n\tandroid: () => navigator.userAgent.match(/Android/i),\n\n\tblackberry: () => navigator.userAgent.match(/BlackBerry/i),\n\n\tios: () => navigator.userAgent.match(/iPhone|iPad|iPod/i),\n\n\topera: () => navigator.userAgent.match(/Opera Mini/i),\n\n\twindows: () => navigator.userAgent.match(/IEMobile/i),\n\n\tany: () => (\n\t\tisMobile.android() ||\n\t\tisMobile.blackberry() ||\n\t\tisMobile.ios() ||\n\t\tisMobile.opera() ||\n\t\tisMobile.windows()\n\t),\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (isMobile);\n\n\n//# sourceURL=webpack:///./src/js/utils/is-mobile.js?");

/***/ }),

/***/ "./src/js/utils/link-fix.js":
/*!**********************************!*\
  !*** ./src/js/utils/link-fix.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return linkFix; });\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ \"./src/js/utils/dom.js\");\n\n/**\n * Fixes target blanks links\n */\n\nfunction linkFix() {\n  const links = Object(_dom__WEBPACK_IMPORTED_MODULE_0__[\"selectAll\"])(\"[target='_blank']\");\n  links.forEach(link => link.setAttribute(\"rel\", \"noopener\"));\n}\n\n\n//# sourceURL=webpack:///./src/js/utils/link-fix.js?");

/***/ }),

/***/ "./src/js/utils/modal-a11y.js":
/*!************************************!*\
  !*** ./src/js/utils/modal-a11y.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return setup; });\n/**\n * Improves keyboard accessibility of modal windows\n * Modal windows are now completely keyboard accessible, but only when visible\n * Prevents tab accessing hidden modal content\n * Prevents tabbing out of modal window if open (but escape key can be used to close modal window at any time)\n * @param {selection} $openEl - selection of element that when clicked opens the modal\n * @param {selection} $closeEl - selection of element that when clicked closes the modal\n * @param {selection} $containerEl - selection of element that contains the modal and any other elements you may want to receive tab focus\n * @param {selection} $modalEl - selection of the modal itself\n * @param {string} focusable - comma separated list of classes, ids, or DOM elements that should receive focus in a modal\n * @param {boolean} hamburger - whether or not the toggle switch represents a hamburger menu (will swap icons if true)\n * @returns {array} array of unique values\n *\n * @example\n * import modalSetup from './utils/modal-a11y';\n * const $openEl = d3.select('.open')\n * const $closeEl = d3.select('.close')\n * const $containerEl = d3.select('.container')\n * const $modalEl = d3.select('.modal')\n * const focusable = 'a, .logo'\n * modalSetup($openEl, $closeEl, $containerEl, $modalEl, focusable, false)\n */\n\nconst hamburgerSVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-menu\"><line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"></line></svg>`;\nconst xSVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-x\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>`;\nconst $body = d3.select('body')\n\nfunction handleOpenClose($modalEl, $toggleEl, hamburger) {\n  // see if menu is already opened\n  const opened = $modalEl.classed('is-visible');\n\n  // update the aria attribute and the actual class of the nav\n  $toggleEl.attr('aria-expanded', !opened);\n  $modalEl.classed('is-active', !opened);\n  $modalEl.classed('is-visible', !opened);\n\n  // set an open class on the body to prevent scrolling \n  $body.classed('modal-open', !opened)\n\n  // if the hamburger argument is set to true, switch between hamburger & x icon\n  if (hamburger === true) {\n    if (opened) {\n      $toggleEl.html(() => hamburgerSVG);\n    } else $toggleEl.html(() => xSVG);\n  }\n}\n\nfunction setup(\n  $openEl,\n  $closeEl,\n  $containerEl,\n  $modalEl,\n  focusable,\n  hamburger\n) {\n\n  // find first and last focusable elements in the modal\n  const $focusableInModal = $containerEl.selectAll(focusable).nodes();\n  const $firstFocus = $focusableInModal[0];\n  const $lastFocus = $focusableInModal[$focusableInModal.length - 1];\n\n  // if you click on the element that triggers the modal to open\n  // open (or close) the modal\n  $openEl.on('click', () => handleOpenClose($modalEl, $openEl, hamburger));\n  $closeEl.on('click', () => handleOpenClose($modalEl, $closeEl, hamburger));\n\n  // listen for escape key press on the modal element\n  $containerEl.on('keydown', event => {\n    const pressed = event.code;\n    const opened = $modalEl.classed('is-visible');\n    if (pressed === 'Escape' && opened === true) {\n      // close menu\n      $openEl.attr('aria-expanded', false);\n      // switch focus back to element that opened the modal\n      $openEl.node().focus();\n      $modalEl.classed('is-active', false);\n      $modalEl.classed('is-visible', false);\n\n      if (hamburger === true) {\n        $openEl.html(() => hamburgerSVG);\n      }\n    }\n  });\n\n  // if focused on first focusable element when menu is open\n  // and moving up, go to last focusable element\n  // if on last focusable element and tab is pressed, go back to first\n  d3.select($firstFocus).on('keydown', event => {\n    const opened = $modalEl.classed('is-visible');\n    if (opened) {\n      const pressed = event.code;\n      const shift = event.shiftKey;\n\n      if (pressed === 'Tab' && shift === true) {\n        // prevent default behavior\n        event.preventDefault();\n\n        // focus on the last element\n        $lastFocus.focus();\n      }\n    }\n  });\n\n  d3.select($lastFocus).on('keydown', event => {\n    const opened = $modalEl.classed('is-visible');\n    if (opened) {\n      const pressed = event.code;\n      const shift = event.shiftKey;\n\n      // if tab is pressed on last element, go back to first\n      if (pressed === 'Tab' && shift === false) {\n        // prevent default behavior\n        event.preventDefault();\n\n        // focus on the first element\n        $firstFocus.focus();\n      }\n    }\n  });\n}\n\n\n//# sourceURL=webpack:///./src/js/utils/modal-a11y.js?");

/***/ })

/******/ });